Terraform v1.5.2
on linux_amd64
+ provider registry.terraform.io/hashicorp/aws v5.8.0
+ provider registry.terraform.io/hashicorp/random v3.5.1

Your version of Terraform is out of date! The latest version
is 1.5.3. You can update by downloading from https://www.terraform.io/downloads.html

Terraform used the selected providers to generate the following execution plan.
Resource actions are indicated with the following symbols:
  + create
  ~ update in-place
  - destroy

Terraform will perform the following actions:

  # aws_instance.web_server will be created
  + resource "aws_instance" "web_server" {
      + ami                                  = "ami-0c94855ba95b798c7"
      + arn                                  = (known after apply)
      + associate_public_ip_address          = (known after apply)
      + availability_zone                    = (known after apply)
      + cpu_core_count                       = (known after apply)
      + cpu_threads_per_core                 = (known after apply)
      + disable_api_stop                     = (known after apply)
      + disable_api_termination              = (known after apply)
      + ebs_optimized                        = (known after apply)
      + get_password_data                    = false
      + host_id                              = (known after apply)
      + id                                   = (known after apply)
      + instance_initiated_shutdown_behavior = (known after apply)
      + instance_state                       = (known after apply)
      + instance_type                        = "t3.micro"
      + ipv6_address_count                   = (known after apply)
      + ipv6_addresses                       = (known after apply)
      + key_name                             = (known after apply)
      + monitoring                           = (known after apply)
      + outpost_arn                          = (known after apply)
      + password_data                        = (known after apply)
      + placement_group                      = (known after apply)
      + placement_partition_number           = (known after apply)
      + primary_network_interface_id         = (known after apply)
      + private_dns_name                     = (known after apply)
      + private_ip                           = (known after apply)
      + public_dns_name                      = (known after apply)
      + public_ip                            = (known after apply)
      + secondary_private_ips                = (known after apply)
      + security_groups                      = (known after apply)
      + source_dest_check                    = true
      + subnet_id                            = (known after apply)
      + tags                                 = {
          + "Environment" = "development"
          + "Name"        = "web-server"
        }
      + tags_all                             = {
          + "Environment" = "development"
          + "Name"        = "web-server"
        }
      + tenancy                              = (known after apply)
      + user_data                            = (known after apply)
      + user_data_base64                     = (known after apply)
      + user_data_replace_on_change          = false
      + vpc_security_group_ids               = (known after apply)
    }

  # aws_security_group.web_sg will be created
  + resource "aws_security_group" "web_sg" {
      + arn                    = (known after apply)
      + description            = "Security group for web server"
      + egress                 = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = ""
              + from_port        = 0
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "-1"
              + security_groups  = []
              + self             = false
              + to_port          = 0
            },
        ]
      + id                     = (known after apply)
      + ingress                = [
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "HTTP"
              + from_port        = 80
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 80
            },
          + {
              + cidr_blocks      = [
                  + "0.0.0.0/0",
                ]
              + description      = "SSH"
              + from_port        = 22
              + ipv6_cidr_blocks = []
              + prefix_list_ids  = []
              + protocol         = "tcp"
              + security_groups  = []
              + self             = false
              + to_port          = 22
            },
        ]
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags_all               = (known after apply)
      + vpc_id                 = (known after apply)
    }

  # random_password.db_password will be updated in-place
  ~ resource "random_password" "db_password" {
        id          = "none"
      ~ length      = 12 -> 16
        # (5 unchanged attributes hidden)
    }

  # aws_s3_bucket.backup_bucket will be destroyed
  - resource "aws_s3_bucket" "backup_bucket" {
      - arn                         = "arn:aws:s3:::my-backup-bucket-12345" -> null
      - bucket                      = "my-backup-bucket-12345" -> null
      - bucket_domain_name          = "my-backup-bucket-12345.s3.amazonaws.com" -> null
      - bucket_regional_domain_name = "my-backup-bucket-12345.s3.us-west-2.amazonaws.com" -> null
      - force_destroy               = false -> null
      - hosted_zone_id              = "Z3BJ6K6RIION7M" -> null
      - id                          = "my-backup-bucket-12345" -> null
      - object_lock_enabled         = false -> null
      - policy                      = "" -> null
      - region                      = "us-west-2" -> null
      - request_payer               = "BucketOwner" -> null
      - tags                        = {} -> null
      - tags_all                    = {} -> null
        # (2 unchanged attributes hidden)
    }

Plan: 2 to add, 1 to change, 1 to destroy.

Changes to Outputs:
  + instance_ip = (known after apply)
  - old_bucket  = "my-backup-bucket-12345" -> null

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee that exactly these actions will be performed if you run "terraform apply".

Do you want to perform these actions?
  Terraform will perform the actions described above.
  Only 'yes' will be accepted to confirm.

  Enter a value: yes

aws_security_group.web_sg: Creating...
random_password.db_password: Modifying... [id=none]
random_password.db_password: Modifications complete after 0s [id=none]
aws_security_group.web_sg: Creation complete after 2s [id=sg-0123456789abcdef0]
aws_instance.web_server: Creating...
aws_s3_bucket.backup_bucket: Destroying... [id=my-backup-bucket-12345]
aws_s3_bucket.backup_bucket: Destruction complete after 1s
aws_instance.web_server: Still creating... [10s elapsed]
aws_instance.web_server: Still creating... [20s elapsed]
aws_instance.web_server: Still creating... [30s elapsed]
aws_instance.web_server: Creation complete after 32s [id=i-0123456789abcdef0]

Apply complete! Resources: 2 added, 1 changed, 1 destroyed.

Outputs:

instance_ip = "54.123.45.67"

Error: Error reading S3 Bucket Policy: NoSuchBucketPolicy: The bucket policy does not exist
	on s3_policy.tf line 15, in data "aws_s3_bucket_policy" "existing":
	15: data "aws_s3_bucket_policy" "existing" {

Warning: Deprecated argument

  on main.tf line 23, in resource "aws_instance" "web_server":
  23:   availability_zone = var.availability_zone

The availability_zone argument is deprecated. Use availability_zone_id instead.

(and 2 other similar warnings elsewhere)

╷
│ Error: Invalid resource type
│ 
│   on network.tf line 45, in resource "aws_internet_gateway_attachment" "main":
│   45: resource "aws_internet_gateway_attachment" "main" {
│ 
│ A provider "aws" plugin is required for this resource type. This provider
│ has not been properly initialized or is missing required configuration.
╵

Error applying configuration: exit status 1