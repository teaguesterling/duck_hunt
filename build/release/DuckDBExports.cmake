# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.29)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS duckdb duckdb_static duck_hunt_extension core_functions_extension parquet_extension jemalloc_extension duckdb_fmt duckdb_duckdb_pg_query duckdb_re2 duckdb_duckdb_miniz duckdb_utf8proc duckdb_hyperloglog duckdb_skiplistlib duckdb_fastpforlib duckdb_mbedtls duckdb_fsst duckdb_duckdb_yyjson duckdb_duckdb_zstd)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target duckdb
add_library(duckdb SHARED IMPORTED)

set_target_properties(duckdb PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/src/include"
  INTERFACE_LINK_LIBRARIES "dl;duckdb_fsst;duckdb_fmt;duckdb_duckdb_pg_query;duckdb_re2;duckdb_duckdb_miniz;duckdb_utf8proc;duckdb_hyperloglog;duckdb_fastpforlib;duckdb_skiplistlib;duckdb_mbedtls;duckdb_duckdb_yyjson;duckdb_duckdb_zstd;Threads::Threads"
)

# Create imported target duckdb_static
add_library(duckdb_static STATIC IMPORTED)

set_target_properties(duckdb_static PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/src/include"
  INTERFACE_LINK_LIBRARIES "dl;duckdb_fsst;duckdb_fmt;duckdb_duckdb_pg_query;duckdb_re2;duckdb_duckdb_miniz;duckdb_utf8proc;duckdb_hyperloglog;duckdb_fastpforlib;duckdb_skiplistlib;duckdb_mbedtls;duckdb_duckdb_yyjson;duckdb_duckdb_zstd;Threads::Threads;duck_hunt_extension;core_functions_extension;parquet_extension;jemalloc_extension"
)

# Create imported target duck_hunt_extension
add_library(duck_hunt_extension STATIC IMPORTED)

set_target_properties(duck_hunt_extension PROPERTIES
  INTERFACE_LINK_LIBRARIES "duckdb_static;OpenSSL::SSL;OpenSSL::Crypto"
)

# Create imported target core_functions_extension
add_library(core_functions_extension STATIC IMPORTED)

set_target_properties(core_functions_extension PROPERTIES
  INTERFACE_LINK_LIBRARIES "duckdb_static"
)

# Create imported target parquet_extension
add_library(parquet_extension STATIC IMPORTED)

set_target_properties(parquet_extension PROPERTIES
  INTERFACE_LINK_LIBRARIES "duckdb_static"
)

# Create imported target jemalloc_extension
add_library(jemalloc_extension STATIC IMPORTED)

set_target_properties(jemalloc_extension PROPERTIES
  INTERFACE_LINK_LIBRARIES "duckdb_static"
)

# Create imported target duckdb_fmt
add_library(duckdb_fmt STATIC IMPORTED)

# Create imported target duckdb_duckdb_pg_query
add_library(duckdb_duckdb_pg_query STATIC IMPORTED)

set_target_properties(duckdb_duckdb_pg_query PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/third_party/libpg_query/include"
)

# Create imported target duckdb_re2
add_library(duckdb_re2 STATIC IMPORTED)

set_target_properties(duckdb_re2 PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/third_party/re2"
)

# Create imported target duckdb_duckdb_miniz
add_library(duckdb_duckdb_miniz STATIC IMPORTED)

set_target_properties(duckdb_duckdb_miniz PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/third_party/miniz"
)

# Create imported target duckdb_utf8proc
add_library(duckdb_utf8proc STATIC IMPORTED)

# Create imported target duckdb_hyperloglog
add_library(duckdb_hyperloglog STATIC IMPORTED)

set_target_properties(duckdb_hyperloglog PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/third_party/hyperloglog"
)

# Create imported target duckdb_skiplistlib
add_library(duckdb_skiplistlib STATIC IMPORTED)

set_target_properties(duckdb_skiplistlib PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/third_party/skiplist"
)

# Create imported target duckdb_fastpforlib
add_library(duckdb_fastpforlib STATIC IMPORTED)

set_target_properties(duckdb_fastpforlib PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/third_party/fastpforlib"
)

# Create imported target duckdb_mbedtls
add_library(duckdb_mbedtls STATIC IMPORTED)

# Create imported target duckdb_fsst
add_library(duckdb_fsst STATIC IMPORTED)

set_target_properties(duckdb_fsst PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/third_party/fsst"
)

# Create imported target duckdb_duckdb_yyjson
add_library(duckdb_duckdb_yyjson STATIC IMPORTED)

set_target_properties(duckdb_duckdb_yyjson PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/third_party/yyjson/include"
)

# Create imported target duckdb_duckdb_zstd
add_library(duckdb_duckdb_zstd STATIC IMPORTED)

set_target_properties(duckdb_duckdb_zstd PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/mnt/aux-data/teague/Projects/duck_hunt/duckdb/third_party/zstd/include"
)

# Import target "duckdb" for configuration "Release"
set_property(TARGET duckdb APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb PROPERTIES
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/src/libduckdb.so"
  IMPORTED_SONAME_RELEASE "libduckdb.so"
  )

# Import target "duckdb_static" for configuration "Release"
set_property(TARGET duckdb_static APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_static PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/src/libduckdb_static.a"
  )

# Import target "duck_hunt_extension" for configuration "Release"
set_property(TARGET duck_hunt_extension APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duck_hunt_extension PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/extension/duck_hunt/libduck_hunt_extension.a"
  )

# Import target "core_functions_extension" for configuration "Release"
set_property(TARGET core_functions_extension APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(core_functions_extension PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/extension/core_functions/libcore_functions_extension.a"
  )

# Import target "parquet_extension" for configuration "Release"
set_property(TARGET parquet_extension APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(parquet_extension PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/extension/parquet/libparquet_extension.a"
  )

# Import target "jemalloc_extension" for configuration "Release"
set_property(TARGET jemalloc_extension APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(jemalloc_extension PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "C;CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/extension/jemalloc/libjemalloc_extension.a"
  )

# Import target "duckdb_fmt" for configuration "Release"
set_property(TARGET duckdb_fmt APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_fmt PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/fmt/libduckdb_fmt.a"
  )

# Import target "duckdb_duckdb_pg_query" for configuration "Release"
set_property(TARGET duckdb_duckdb_pg_query APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_duckdb_pg_query PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/libpg_query/libduckdb_pg_query.a"
  )

# Import target "duckdb_re2" for configuration "Release"
set_property(TARGET duckdb_re2 APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_re2 PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/re2/libduckdb_re2.a"
  )

# Import target "duckdb_duckdb_miniz" for configuration "Release"
set_property(TARGET duckdb_duckdb_miniz APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_duckdb_miniz PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/miniz/libduckdb_miniz.a"
  )

# Import target "duckdb_utf8proc" for configuration "Release"
set_property(TARGET duckdb_utf8proc APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_utf8proc PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/utf8proc/libduckdb_utf8proc.a"
  )

# Import target "duckdb_hyperloglog" for configuration "Release"
set_property(TARGET duckdb_hyperloglog APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_hyperloglog PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/hyperloglog/libduckdb_hyperloglog.a"
  )

# Import target "duckdb_skiplistlib" for configuration "Release"
set_property(TARGET duckdb_skiplistlib APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_skiplistlib PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/skiplist/libduckdb_skiplistlib.a"
  )

# Import target "duckdb_fastpforlib" for configuration "Release"
set_property(TARGET duckdb_fastpforlib APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_fastpforlib PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/fastpforlib/libduckdb_fastpforlib.a"
  )

# Import target "duckdb_mbedtls" for configuration "Release"
set_property(TARGET duckdb_mbedtls APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_mbedtls PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/mbedtls/libduckdb_mbedtls.a"
  )

# Import target "duckdb_fsst" for configuration "Release"
set_property(TARGET duckdb_fsst APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_fsst PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/fsst/libduckdb_fsst.a"
  )

# Import target "duckdb_duckdb_yyjson" for configuration "Release"
set_property(TARGET duckdb_duckdb_yyjson APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_duckdb_yyjson PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/yyjson/libduckdb_yyjson.a"
  )

# Import target "duckdb_duckdb_zstd" for configuration "Release"
set_property(TARGET duckdb_duckdb_zstd APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(duckdb_duckdb_zstd PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/mnt/aux-data/teague/Projects/duck_hunt/build/release/third_party/zstd/libduckdb_zstd.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
