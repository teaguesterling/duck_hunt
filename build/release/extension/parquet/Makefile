# CMAKE generated file: DO NOT EDIT!
# Generated by "Unix Makefiles" Generator, CMake Version 3.31

# Default target executed when no arguments are given to make.
default_target: all
.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:

#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:

# Disable VCS-based implicit rules.
% : %,v

# Disable VCS-based implicit rules.
% : RCS/%

# Disable VCS-based implicit rules.
% : RCS/%,v

# Disable VCS-based implicit rules.
% : SCCS/s.%

# Disable VCS-based implicit rules.
% : s.%

.SUFFIXES: .hpux_make_needs_suffix_list

# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

#Suppress display of executed commands.
$(VERBOSE).SILENT:

# A target that is always out of date.
cmake_force:
.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

# The shell in which to execute make rules.
SHELL = /bin/sh

# The CMake executable.
CMAKE_COMMAND = /mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/cmake

# The command to remove a file.
RM = /mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/cmake -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = /mnt/aux-data/teague/Projects/duck_hunt/duckdb

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = /mnt/aux-data/teague/Projects/duck_hunt/build/release

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake cache editor..."
	/mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/ccmake -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache
.PHONY : edit_cache/fast

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Running CMake to regenerate build system..."
	/mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/cmake --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache
.PHONY : rebuild_cache/fast

# Special rule for the target list_install_components
list_install_components:
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Available install components are: \"Unspecified\""
.PHONY : list_install_components

# Special rule for the target list_install_components
list_install_components/fast: list_install_components
.PHONY : list_install_components/fast

# Special rule for the target install
install: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/cmake -P cmake_install.cmake
.PHONY : install

# Special rule for the target install
install/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Install the project..."
	/mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/cmake -P cmake_install.cmake
.PHONY : install/fast

# Special rule for the target install/local
install/local: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local

# Special rule for the target install/local
install/local/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing only the local directory..."
	/mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/cmake -DCMAKE_INSTALL_LOCAL_ONLY=1 -P cmake_install.cmake
.PHONY : install/local/fast

# Special rule for the target install/strip
install/strip: preinstall
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip

# Special rule for the target install/strip
install/strip/fast: preinstall/fast
	@$(CMAKE_COMMAND) -E cmake_echo_color "--switch=$(COLOR)" --cyan "Installing the project stripped..."
	/mnt/aux-data/teague/Dev/spack/opt/spack/linux-pop22-zen3/gcc-11.4.0/cmake-3.31.5-cyfuecd73avdygws2qdqfaubfcll7fpz/bin/cmake -DCMAKE_INSTALL_DO_STRIP=1 -P cmake_install.cmake
.PHONY : install/strip/fast

# The main all target
all: cmake_check_build_system
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(CMAKE_COMMAND) -E cmake_progress_start /mnt/aux-data/teague/Projects/duck_hunt/build/release/CMakeFiles /mnt/aux-data/teague/Projects/duck_hunt/build/release/extension/parquet//CMakeFiles/progress.marks
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 extension/parquet/all
	$(CMAKE_COMMAND) -E cmake_progress_start /mnt/aux-data/teague/Projects/duck_hunt/build/release/CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 extension/parquet/clean
.PHONY : clean

# The main clean target
clean/fast: clean
.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 extension/parquet/preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 extension/parquet/preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 1
.PHONY : depend

# Convenience name for target.
extension/parquet/CMakeFiles/parquet_extension.dir/rule:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 extension/parquet/CMakeFiles/parquet_extension.dir/rule
.PHONY : extension/parquet/CMakeFiles/parquet_extension.dir/rule

# Convenience name for target.
parquet_extension: extension/parquet/CMakeFiles/parquet_extension.dir/rule
.PHONY : parquet_extension

# fast build rule for target.
parquet_extension/fast:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/build
.PHONY : parquet_extension/fast

# Convenience name for target.
extension/parquet/CMakeFiles/parquet_loadable_extension.dir/rule:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f CMakeFiles/Makefile2 extension/parquet/CMakeFiles/parquet_loadable_extension.dir/rule
.PHONY : extension/parquet/CMakeFiles/parquet_loadable_extension.dir/rule

# Convenience name for target.
parquet_loadable_extension: extension/parquet/CMakeFiles/parquet_loadable_extension.dir/rule
.PHONY : parquet_loadable_extension

# fast build rule for target.
parquet_loadable_extension/fast:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build
.PHONY : parquet_loadable_extension/fast

__/__/third_party/brotli/common/constants.o: __/__/third_party/brotli/common/constants.cpp.o
.PHONY : __/__/third_party/brotli/common/constants.o

# target to build an object file
__/__/third_party/brotli/common/constants.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/constants.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/constants.cpp.o
.PHONY : __/__/third_party/brotli/common/constants.cpp.o

__/__/third_party/brotli/common/constants.i: __/__/third_party/brotli/common/constants.cpp.i
.PHONY : __/__/third_party/brotli/common/constants.i

# target to preprocess a source file
__/__/third_party/brotli/common/constants.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/constants.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/constants.cpp.i
.PHONY : __/__/third_party/brotli/common/constants.cpp.i

__/__/third_party/brotli/common/constants.s: __/__/third_party/brotli/common/constants.cpp.s
.PHONY : __/__/third_party/brotli/common/constants.s

# target to generate assembly for a file
__/__/third_party/brotli/common/constants.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/constants.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/constants.cpp.s
.PHONY : __/__/third_party/brotli/common/constants.cpp.s

__/__/third_party/brotli/common/context.o: __/__/third_party/brotli/common/context.cpp.o
.PHONY : __/__/third_party/brotli/common/context.o

# target to build an object file
__/__/third_party/brotli/common/context.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/context.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/context.cpp.o
.PHONY : __/__/third_party/brotli/common/context.cpp.o

__/__/third_party/brotli/common/context.i: __/__/third_party/brotli/common/context.cpp.i
.PHONY : __/__/third_party/brotli/common/context.i

# target to preprocess a source file
__/__/third_party/brotli/common/context.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/context.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/context.cpp.i
.PHONY : __/__/third_party/brotli/common/context.cpp.i

__/__/third_party/brotli/common/context.s: __/__/third_party/brotli/common/context.cpp.s
.PHONY : __/__/third_party/brotli/common/context.s

# target to generate assembly for a file
__/__/third_party/brotli/common/context.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/context.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/context.cpp.s
.PHONY : __/__/third_party/brotli/common/context.cpp.s

__/__/third_party/brotli/common/dictionary.o: __/__/third_party/brotli/common/dictionary.cpp.o
.PHONY : __/__/third_party/brotli/common/dictionary.o

# target to build an object file
__/__/third_party/brotli/common/dictionary.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/dictionary.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/dictionary.cpp.o
.PHONY : __/__/third_party/brotli/common/dictionary.cpp.o

__/__/third_party/brotli/common/dictionary.i: __/__/third_party/brotli/common/dictionary.cpp.i
.PHONY : __/__/third_party/brotli/common/dictionary.i

# target to preprocess a source file
__/__/third_party/brotli/common/dictionary.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/dictionary.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/dictionary.cpp.i
.PHONY : __/__/third_party/brotli/common/dictionary.cpp.i

__/__/third_party/brotli/common/dictionary.s: __/__/third_party/brotli/common/dictionary.cpp.s
.PHONY : __/__/third_party/brotli/common/dictionary.s

# target to generate assembly for a file
__/__/third_party/brotli/common/dictionary.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/dictionary.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/dictionary.cpp.s
.PHONY : __/__/third_party/brotli/common/dictionary.cpp.s

__/__/third_party/brotli/common/platform.o: __/__/third_party/brotli/common/platform.cpp.o
.PHONY : __/__/third_party/brotli/common/platform.o

# target to build an object file
__/__/third_party/brotli/common/platform.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/platform.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/platform.cpp.o
.PHONY : __/__/third_party/brotli/common/platform.cpp.o

__/__/third_party/brotli/common/platform.i: __/__/third_party/brotli/common/platform.cpp.i
.PHONY : __/__/third_party/brotli/common/platform.i

# target to preprocess a source file
__/__/third_party/brotli/common/platform.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/platform.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/platform.cpp.i
.PHONY : __/__/third_party/brotli/common/platform.cpp.i

__/__/third_party/brotli/common/platform.s: __/__/third_party/brotli/common/platform.cpp.s
.PHONY : __/__/third_party/brotli/common/platform.s

# target to generate assembly for a file
__/__/third_party/brotli/common/platform.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/platform.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/platform.cpp.s
.PHONY : __/__/third_party/brotli/common/platform.cpp.s

__/__/third_party/brotli/common/shared_dictionary.o: __/__/third_party/brotli/common/shared_dictionary.cpp.o
.PHONY : __/__/third_party/brotli/common/shared_dictionary.o

# target to build an object file
__/__/third_party/brotli/common/shared_dictionary.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/shared_dictionary.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/shared_dictionary.cpp.o
.PHONY : __/__/third_party/brotli/common/shared_dictionary.cpp.o

__/__/third_party/brotli/common/shared_dictionary.i: __/__/third_party/brotli/common/shared_dictionary.cpp.i
.PHONY : __/__/third_party/brotli/common/shared_dictionary.i

# target to preprocess a source file
__/__/third_party/brotli/common/shared_dictionary.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/shared_dictionary.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/shared_dictionary.cpp.i
.PHONY : __/__/third_party/brotli/common/shared_dictionary.cpp.i

__/__/third_party/brotli/common/shared_dictionary.s: __/__/third_party/brotli/common/shared_dictionary.cpp.s
.PHONY : __/__/third_party/brotli/common/shared_dictionary.s

# target to generate assembly for a file
__/__/third_party/brotli/common/shared_dictionary.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/shared_dictionary.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/shared_dictionary.cpp.s
.PHONY : __/__/third_party/brotli/common/shared_dictionary.cpp.s

__/__/third_party/brotli/common/transform.o: __/__/third_party/brotli/common/transform.cpp.o
.PHONY : __/__/third_party/brotli/common/transform.o

# target to build an object file
__/__/third_party/brotli/common/transform.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/transform.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/transform.cpp.o
.PHONY : __/__/third_party/brotli/common/transform.cpp.o

__/__/third_party/brotli/common/transform.i: __/__/third_party/brotli/common/transform.cpp.i
.PHONY : __/__/third_party/brotli/common/transform.i

# target to preprocess a source file
__/__/third_party/brotli/common/transform.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/transform.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/transform.cpp.i
.PHONY : __/__/third_party/brotli/common/transform.cpp.i

__/__/third_party/brotli/common/transform.s: __/__/third_party/brotli/common/transform.cpp.s
.PHONY : __/__/third_party/brotli/common/transform.s

# target to generate assembly for a file
__/__/third_party/brotli/common/transform.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/common/transform.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/common/transform.cpp.s
.PHONY : __/__/third_party/brotli/common/transform.cpp.s

__/__/third_party/brotli/dec/bit_reader.o: __/__/third_party/brotli/dec/bit_reader.cpp.o
.PHONY : __/__/third_party/brotli/dec/bit_reader.o

# target to build an object file
__/__/third_party/brotli/dec/bit_reader.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/bit_reader.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/bit_reader.cpp.o
.PHONY : __/__/third_party/brotli/dec/bit_reader.cpp.o

__/__/third_party/brotli/dec/bit_reader.i: __/__/third_party/brotli/dec/bit_reader.cpp.i
.PHONY : __/__/third_party/brotli/dec/bit_reader.i

# target to preprocess a source file
__/__/third_party/brotli/dec/bit_reader.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/bit_reader.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/bit_reader.cpp.i
.PHONY : __/__/third_party/brotli/dec/bit_reader.cpp.i

__/__/third_party/brotli/dec/bit_reader.s: __/__/third_party/brotli/dec/bit_reader.cpp.s
.PHONY : __/__/third_party/brotli/dec/bit_reader.s

# target to generate assembly for a file
__/__/third_party/brotli/dec/bit_reader.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/bit_reader.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/bit_reader.cpp.s
.PHONY : __/__/third_party/brotli/dec/bit_reader.cpp.s

__/__/third_party/brotli/dec/decode.o: __/__/third_party/brotli/dec/decode.cpp.o
.PHONY : __/__/third_party/brotli/dec/decode.o

# target to build an object file
__/__/third_party/brotli/dec/decode.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/decode.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/decode.cpp.o
.PHONY : __/__/third_party/brotli/dec/decode.cpp.o

__/__/third_party/brotli/dec/decode.i: __/__/third_party/brotli/dec/decode.cpp.i
.PHONY : __/__/third_party/brotli/dec/decode.i

# target to preprocess a source file
__/__/third_party/brotli/dec/decode.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/decode.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/decode.cpp.i
.PHONY : __/__/third_party/brotli/dec/decode.cpp.i

__/__/third_party/brotli/dec/decode.s: __/__/third_party/brotli/dec/decode.cpp.s
.PHONY : __/__/third_party/brotli/dec/decode.s

# target to generate assembly for a file
__/__/third_party/brotli/dec/decode.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/decode.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/decode.cpp.s
.PHONY : __/__/third_party/brotli/dec/decode.cpp.s

__/__/third_party/brotli/dec/huffman.o: __/__/third_party/brotli/dec/huffman.cpp.o
.PHONY : __/__/third_party/brotli/dec/huffman.o

# target to build an object file
__/__/third_party/brotli/dec/huffman.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/huffman.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/huffman.cpp.o
.PHONY : __/__/third_party/brotli/dec/huffman.cpp.o

__/__/third_party/brotli/dec/huffman.i: __/__/third_party/brotli/dec/huffman.cpp.i
.PHONY : __/__/third_party/brotli/dec/huffman.i

# target to preprocess a source file
__/__/third_party/brotli/dec/huffman.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/huffman.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/huffman.cpp.i
.PHONY : __/__/third_party/brotli/dec/huffman.cpp.i

__/__/third_party/brotli/dec/huffman.s: __/__/third_party/brotli/dec/huffman.cpp.s
.PHONY : __/__/third_party/brotli/dec/huffman.s

# target to generate assembly for a file
__/__/third_party/brotli/dec/huffman.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/huffman.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/huffman.cpp.s
.PHONY : __/__/third_party/brotli/dec/huffman.cpp.s

__/__/third_party/brotli/dec/state.o: __/__/third_party/brotli/dec/state.cpp.o
.PHONY : __/__/third_party/brotli/dec/state.o

# target to build an object file
__/__/third_party/brotli/dec/state.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/state.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/state.cpp.o
.PHONY : __/__/third_party/brotli/dec/state.cpp.o

__/__/third_party/brotli/dec/state.i: __/__/third_party/brotli/dec/state.cpp.i
.PHONY : __/__/third_party/brotli/dec/state.i

# target to preprocess a source file
__/__/third_party/brotli/dec/state.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/state.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/state.cpp.i
.PHONY : __/__/third_party/brotli/dec/state.cpp.i

__/__/third_party/brotli/dec/state.s: __/__/third_party/brotli/dec/state.cpp.s
.PHONY : __/__/third_party/brotli/dec/state.s

# target to generate assembly for a file
__/__/third_party/brotli/dec/state.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/dec/state.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/dec/state.cpp.s
.PHONY : __/__/third_party/brotli/dec/state.cpp.s

__/__/third_party/brotli/enc/backward_references.o: __/__/third_party/brotli/enc/backward_references.cpp.o
.PHONY : __/__/third_party/brotli/enc/backward_references.o

# target to build an object file
__/__/third_party/brotli/enc/backward_references.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/backward_references.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/backward_references.cpp.o
.PHONY : __/__/third_party/brotli/enc/backward_references.cpp.o

__/__/third_party/brotli/enc/backward_references.i: __/__/third_party/brotli/enc/backward_references.cpp.i
.PHONY : __/__/third_party/brotli/enc/backward_references.i

# target to preprocess a source file
__/__/third_party/brotli/enc/backward_references.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/backward_references.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/backward_references.cpp.i
.PHONY : __/__/third_party/brotli/enc/backward_references.cpp.i

__/__/third_party/brotli/enc/backward_references.s: __/__/third_party/brotli/enc/backward_references.cpp.s
.PHONY : __/__/third_party/brotli/enc/backward_references.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/backward_references.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/backward_references.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/backward_references.cpp.s
.PHONY : __/__/third_party/brotli/enc/backward_references.cpp.s

__/__/third_party/brotli/enc/backward_references_hq.o: __/__/third_party/brotli/enc/backward_references_hq.cpp.o
.PHONY : __/__/third_party/brotli/enc/backward_references_hq.o

# target to build an object file
__/__/third_party/brotli/enc/backward_references_hq.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/backward_references_hq.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/backward_references_hq.cpp.o
.PHONY : __/__/third_party/brotli/enc/backward_references_hq.cpp.o

__/__/third_party/brotli/enc/backward_references_hq.i: __/__/third_party/brotli/enc/backward_references_hq.cpp.i
.PHONY : __/__/third_party/brotli/enc/backward_references_hq.i

# target to preprocess a source file
__/__/third_party/brotli/enc/backward_references_hq.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/backward_references_hq.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/backward_references_hq.cpp.i
.PHONY : __/__/third_party/brotli/enc/backward_references_hq.cpp.i

__/__/third_party/brotli/enc/backward_references_hq.s: __/__/third_party/brotli/enc/backward_references_hq.cpp.s
.PHONY : __/__/third_party/brotli/enc/backward_references_hq.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/backward_references_hq.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/backward_references_hq.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/backward_references_hq.cpp.s
.PHONY : __/__/third_party/brotli/enc/backward_references_hq.cpp.s

__/__/third_party/brotli/enc/bit_cost.o: __/__/third_party/brotli/enc/bit_cost.cpp.o
.PHONY : __/__/third_party/brotli/enc/bit_cost.o

# target to build an object file
__/__/third_party/brotli/enc/bit_cost.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/bit_cost.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/bit_cost.cpp.o
.PHONY : __/__/third_party/brotli/enc/bit_cost.cpp.o

__/__/third_party/brotli/enc/bit_cost.i: __/__/third_party/brotli/enc/bit_cost.cpp.i
.PHONY : __/__/third_party/brotli/enc/bit_cost.i

# target to preprocess a source file
__/__/third_party/brotli/enc/bit_cost.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/bit_cost.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/bit_cost.cpp.i
.PHONY : __/__/third_party/brotli/enc/bit_cost.cpp.i

__/__/third_party/brotli/enc/bit_cost.s: __/__/third_party/brotli/enc/bit_cost.cpp.s
.PHONY : __/__/third_party/brotli/enc/bit_cost.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/bit_cost.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/bit_cost.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/bit_cost.cpp.s
.PHONY : __/__/third_party/brotli/enc/bit_cost.cpp.s

__/__/third_party/brotli/enc/block_splitter.o: __/__/third_party/brotli/enc/block_splitter.cpp.o
.PHONY : __/__/third_party/brotli/enc/block_splitter.o

# target to build an object file
__/__/third_party/brotli/enc/block_splitter.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/block_splitter.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/block_splitter.cpp.o
.PHONY : __/__/third_party/brotli/enc/block_splitter.cpp.o

__/__/third_party/brotli/enc/block_splitter.i: __/__/third_party/brotli/enc/block_splitter.cpp.i
.PHONY : __/__/third_party/brotli/enc/block_splitter.i

# target to preprocess a source file
__/__/third_party/brotli/enc/block_splitter.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/block_splitter.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/block_splitter.cpp.i
.PHONY : __/__/third_party/brotli/enc/block_splitter.cpp.i

__/__/third_party/brotli/enc/block_splitter.s: __/__/third_party/brotli/enc/block_splitter.cpp.s
.PHONY : __/__/third_party/brotli/enc/block_splitter.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/block_splitter.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/block_splitter.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/block_splitter.cpp.s
.PHONY : __/__/third_party/brotli/enc/block_splitter.cpp.s

__/__/third_party/brotli/enc/brotli_bit_stream.o: __/__/third_party/brotli/enc/brotli_bit_stream.cpp.o
.PHONY : __/__/third_party/brotli/enc/brotli_bit_stream.o

# target to build an object file
__/__/third_party/brotli/enc/brotli_bit_stream.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/brotli_bit_stream.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/brotli_bit_stream.cpp.o
.PHONY : __/__/third_party/brotli/enc/brotli_bit_stream.cpp.o

__/__/third_party/brotli/enc/brotli_bit_stream.i: __/__/third_party/brotli/enc/brotli_bit_stream.cpp.i
.PHONY : __/__/third_party/brotli/enc/brotli_bit_stream.i

# target to preprocess a source file
__/__/third_party/brotli/enc/brotli_bit_stream.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/brotli_bit_stream.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/brotli_bit_stream.cpp.i
.PHONY : __/__/third_party/brotli/enc/brotli_bit_stream.cpp.i

__/__/third_party/brotli/enc/brotli_bit_stream.s: __/__/third_party/brotli/enc/brotli_bit_stream.cpp.s
.PHONY : __/__/third_party/brotli/enc/brotli_bit_stream.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/brotli_bit_stream.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/brotli_bit_stream.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/brotli_bit_stream.cpp.s
.PHONY : __/__/third_party/brotli/enc/brotli_bit_stream.cpp.s

__/__/third_party/brotli/enc/cluster.o: __/__/third_party/brotli/enc/cluster.cpp.o
.PHONY : __/__/third_party/brotli/enc/cluster.o

# target to build an object file
__/__/third_party/brotli/enc/cluster.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/cluster.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/cluster.cpp.o
.PHONY : __/__/third_party/brotli/enc/cluster.cpp.o

__/__/third_party/brotli/enc/cluster.i: __/__/third_party/brotli/enc/cluster.cpp.i
.PHONY : __/__/third_party/brotli/enc/cluster.i

# target to preprocess a source file
__/__/third_party/brotli/enc/cluster.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/cluster.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/cluster.cpp.i
.PHONY : __/__/third_party/brotli/enc/cluster.cpp.i

__/__/third_party/brotli/enc/cluster.s: __/__/third_party/brotli/enc/cluster.cpp.s
.PHONY : __/__/third_party/brotli/enc/cluster.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/cluster.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/cluster.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/cluster.cpp.s
.PHONY : __/__/third_party/brotli/enc/cluster.cpp.s

__/__/third_party/brotli/enc/command.o: __/__/third_party/brotli/enc/command.cpp.o
.PHONY : __/__/third_party/brotli/enc/command.o

# target to build an object file
__/__/third_party/brotli/enc/command.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/command.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/command.cpp.o
.PHONY : __/__/third_party/brotli/enc/command.cpp.o

__/__/third_party/brotli/enc/command.i: __/__/third_party/brotli/enc/command.cpp.i
.PHONY : __/__/third_party/brotli/enc/command.i

# target to preprocess a source file
__/__/third_party/brotli/enc/command.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/command.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/command.cpp.i
.PHONY : __/__/third_party/brotli/enc/command.cpp.i

__/__/third_party/brotli/enc/command.s: __/__/third_party/brotli/enc/command.cpp.s
.PHONY : __/__/third_party/brotli/enc/command.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/command.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/command.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/command.cpp.s
.PHONY : __/__/third_party/brotli/enc/command.cpp.s

__/__/third_party/brotli/enc/compound_dictionary.o: __/__/third_party/brotli/enc/compound_dictionary.cpp.o
.PHONY : __/__/third_party/brotli/enc/compound_dictionary.o

# target to build an object file
__/__/third_party/brotli/enc/compound_dictionary.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/compound_dictionary.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/compound_dictionary.cpp.o
.PHONY : __/__/third_party/brotli/enc/compound_dictionary.cpp.o

__/__/third_party/brotli/enc/compound_dictionary.i: __/__/third_party/brotli/enc/compound_dictionary.cpp.i
.PHONY : __/__/third_party/brotli/enc/compound_dictionary.i

# target to preprocess a source file
__/__/third_party/brotli/enc/compound_dictionary.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/compound_dictionary.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/compound_dictionary.cpp.i
.PHONY : __/__/third_party/brotli/enc/compound_dictionary.cpp.i

__/__/third_party/brotli/enc/compound_dictionary.s: __/__/third_party/brotli/enc/compound_dictionary.cpp.s
.PHONY : __/__/third_party/brotli/enc/compound_dictionary.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/compound_dictionary.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/compound_dictionary.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/compound_dictionary.cpp.s
.PHONY : __/__/third_party/brotli/enc/compound_dictionary.cpp.s

__/__/third_party/brotli/enc/compress_fragment.o: __/__/third_party/brotli/enc/compress_fragment.cpp.o
.PHONY : __/__/third_party/brotli/enc/compress_fragment.o

# target to build an object file
__/__/third_party/brotli/enc/compress_fragment.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/compress_fragment.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/compress_fragment.cpp.o
.PHONY : __/__/third_party/brotli/enc/compress_fragment.cpp.o

__/__/third_party/brotli/enc/compress_fragment.i: __/__/third_party/brotli/enc/compress_fragment.cpp.i
.PHONY : __/__/third_party/brotli/enc/compress_fragment.i

# target to preprocess a source file
__/__/third_party/brotli/enc/compress_fragment.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/compress_fragment.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/compress_fragment.cpp.i
.PHONY : __/__/third_party/brotli/enc/compress_fragment.cpp.i

__/__/third_party/brotli/enc/compress_fragment.s: __/__/third_party/brotli/enc/compress_fragment.cpp.s
.PHONY : __/__/third_party/brotli/enc/compress_fragment.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/compress_fragment.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/compress_fragment.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/compress_fragment.cpp.s
.PHONY : __/__/third_party/brotli/enc/compress_fragment.cpp.s

__/__/third_party/brotli/enc/compress_fragment_two_pass.o: __/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.o
.PHONY : __/__/third_party/brotli/enc/compress_fragment_two_pass.o

# target to build an object file
__/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.o
.PHONY : __/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.o

__/__/third_party/brotli/enc/compress_fragment_two_pass.i: __/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.i
.PHONY : __/__/third_party/brotli/enc/compress_fragment_two_pass.i

# target to preprocess a source file
__/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.i
.PHONY : __/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.i

__/__/third_party/brotli/enc/compress_fragment_two_pass.s: __/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.s
.PHONY : __/__/third_party/brotli/enc/compress_fragment_two_pass.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.s
.PHONY : __/__/third_party/brotli/enc/compress_fragment_two_pass.cpp.s

__/__/third_party/brotli/enc/dictionary_hash.o: __/__/third_party/brotli/enc/dictionary_hash.cpp.o
.PHONY : __/__/third_party/brotli/enc/dictionary_hash.o

# target to build an object file
__/__/third_party/brotli/enc/dictionary_hash.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/dictionary_hash.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/dictionary_hash.cpp.o
.PHONY : __/__/third_party/brotli/enc/dictionary_hash.cpp.o

__/__/third_party/brotli/enc/dictionary_hash.i: __/__/third_party/brotli/enc/dictionary_hash.cpp.i
.PHONY : __/__/third_party/brotli/enc/dictionary_hash.i

# target to preprocess a source file
__/__/third_party/brotli/enc/dictionary_hash.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/dictionary_hash.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/dictionary_hash.cpp.i
.PHONY : __/__/third_party/brotli/enc/dictionary_hash.cpp.i

__/__/third_party/brotli/enc/dictionary_hash.s: __/__/third_party/brotli/enc/dictionary_hash.cpp.s
.PHONY : __/__/third_party/brotli/enc/dictionary_hash.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/dictionary_hash.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/dictionary_hash.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/dictionary_hash.cpp.s
.PHONY : __/__/third_party/brotli/enc/dictionary_hash.cpp.s

__/__/third_party/brotli/enc/encode.o: __/__/third_party/brotli/enc/encode.cpp.o
.PHONY : __/__/third_party/brotli/enc/encode.o

# target to build an object file
__/__/third_party/brotli/enc/encode.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/encode.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/encode.cpp.o
.PHONY : __/__/third_party/brotli/enc/encode.cpp.o

__/__/third_party/brotli/enc/encode.i: __/__/third_party/brotli/enc/encode.cpp.i
.PHONY : __/__/third_party/brotli/enc/encode.i

# target to preprocess a source file
__/__/third_party/brotli/enc/encode.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/encode.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/encode.cpp.i
.PHONY : __/__/third_party/brotli/enc/encode.cpp.i

__/__/third_party/brotli/enc/encode.s: __/__/third_party/brotli/enc/encode.cpp.s
.PHONY : __/__/third_party/brotli/enc/encode.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/encode.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/encode.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/encode.cpp.s
.PHONY : __/__/third_party/brotli/enc/encode.cpp.s

__/__/third_party/brotli/enc/encoder_dict.o: __/__/third_party/brotli/enc/encoder_dict.cpp.o
.PHONY : __/__/third_party/brotli/enc/encoder_dict.o

# target to build an object file
__/__/third_party/brotli/enc/encoder_dict.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/encoder_dict.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/encoder_dict.cpp.o
.PHONY : __/__/third_party/brotli/enc/encoder_dict.cpp.o

__/__/third_party/brotli/enc/encoder_dict.i: __/__/third_party/brotli/enc/encoder_dict.cpp.i
.PHONY : __/__/third_party/brotli/enc/encoder_dict.i

# target to preprocess a source file
__/__/third_party/brotli/enc/encoder_dict.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/encoder_dict.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/encoder_dict.cpp.i
.PHONY : __/__/third_party/brotli/enc/encoder_dict.cpp.i

__/__/third_party/brotli/enc/encoder_dict.s: __/__/third_party/brotli/enc/encoder_dict.cpp.s
.PHONY : __/__/third_party/brotli/enc/encoder_dict.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/encoder_dict.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/encoder_dict.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/encoder_dict.cpp.s
.PHONY : __/__/third_party/brotli/enc/encoder_dict.cpp.s

__/__/third_party/brotli/enc/entropy_encode.o: __/__/third_party/brotli/enc/entropy_encode.cpp.o
.PHONY : __/__/third_party/brotli/enc/entropy_encode.o

# target to build an object file
__/__/third_party/brotli/enc/entropy_encode.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/entropy_encode.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/entropy_encode.cpp.o
.PHONY : __/__/third_party/brotli/enc/entropy_encode.cpp.o

__/__/third_party/brotli/enc/entropy_encode.i: __/__/third_party/brotli/enc/entropy_encode.cpp.i
.PHONY : __/__/third_party/brotli/enc/entropy_encode.i

# target to preprocess a source file
__/__/third_party/brotli/enc/entropy_encode.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/entropy_encode.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/entropy_encode.cpp.i
.PHONY : __/__/third_party/brotli/enc/entropy_encode.cpp.i

__/__/third_party/brotli/enc/entropy_encode.s: __/__/third_party/brotli/enc/entropy_encode.cpp.s
.PHONY : __/__/third_party/brotli/enc/entropy_encode.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/entropy_encode.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/entropy_encode.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/entropy_encode.cpp.s
.PHONY : __/__/third_party/brotli/enc/entropy_encode.cpp.s

__/__/third_party/brotli/enc/fast_log.o: __/__/third_party/brotli/enc/fast_log.cpp.o
.PHONY : __/__/third_party/brotli/enc/fast_log.o

# target to build an object file
__/__/third_party/brotli/enc/fast_log.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/fast_log.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/fast_log.cpp.o
.PHONY : __/__/third_party/brotli/enc/fast_log.cpp.o

__/__/third_party/brotli/enc/fast_log.i: __/__/third_party/brotli/enc/fast_log.cpp.i
.PHONY : __/__/third_party/brotli/enc/fast_log.i

# target to preprocess a source file
__/__/third_party/brotli/enc/fast_log.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/fast_log.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/fast_log.cpp.i
.PHONY : __/__/third_party/brotli/enc/fast_log.cpp.i

__/__/third_party/brotli/enc/fast_log.s: __/__/third_party/brotli/enc/fast_log.cpp.s
.PHONY : __/__/third_party/brotli/enc/fast_log.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/fast_log.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/fast_log.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/fast_log.cpp.s
.PHONY : __/__/third_party/brotli/enc/fast_log.cpp.s

__/__/third_party/brotli/enc/histogram.o: __/__/third_party/brotli/enc/histogram.cpp.o
.PHONY : __/__/third_party/brotli/enc/histogram.o

# target to build an object file
__/__/third_party/brotli/enc/histogram.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/histogram.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/histogram.cpp.o
.PHONY : __/__/third_party/brotli/enc/histogram.cpp.o

__/__/third_party/brotli/enc/histogram.i: __/__/third_party/brotli/enc/histogram.cpp.i
.PHONY : __/__/third_party/brotli/enc/histogram.i

# target to preprocess a source file
__/__/third_party/brotli/enc/histogram.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/histogram.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/histogram.cpp.i
.PHONY : __/__/third_party/brotli/enc/histogram.cpp.i

__/__/third_party/brotli/enc/histogram.s: __/__/third_party/brotli/enc/histogram.cpp.s
.PHONY : __/__/third_party/brotli/enc/histogram.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/histogram.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/histogram.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/histogram.cpp.s
.PHONY : __/__/third_party/brotli/enc/histogram.cpp.s

__/__/third_party/brotli/enc/literal_cost.o: __/__/third_party/brotli/enc/literal_cost.cpp.o
.PHONY : __/__/third_party/brotli/enc/literal_cost.o

# target to build an object file
__/__/third_party/brotli/enc/literal_cost.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/literal_cost.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/literal_cost.cpp.o
.PHONY : __/__/third_party/brotli/enc/literal_cost.cpp.o

__/__/third_party/brotli/enc/literal_cost.i: __/__/third_party/brotli/enc/literal_cost.cpp.i
.PHONY : __/__/third_party/brotli/enc/literal_cost.i

# target to preprocess a source file
__/__/third_party/brotli/enc/literal_cost.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/literal_cost.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/literal_cost.cpp.i
.PHONY : __/__/third_party/brotli/enc/literal_cost.cpp.i

__/__/third_party/brotli/enc/literal_cost.s: __/__/third_party/brotli/enc/literal_cost.cpp.s
.PHONY : __/__/third_party/brotli/enc/literal_cost.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/literal_cost.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/literal_cost.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/literal_cost.cpp.s
.PHONY : __/__/third_party/brotli/enc/literal_cost.cpp.s

__/__/third_party/brotli/enc/memory.o: __/__/third_party/brotli/enc/memory.cpp.o
.PHONY : __/__/third_party/brotli/enc/memory.o

# target to build an object file
__/__/third_party/brotli/enc/memory.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/memory.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/memory.cpp.o
.PHONY : __/__/third_party/brotli/enc/memory.cpp.o

__/__/third_party/brotli/enc/memory.i: __/__/third_party/brotli/enc/memory.cpp.i
.PHONY : __/__/third_party/brotli/enc/memory.i

# target to preprocess a source file
__/__/third_party/brotli/enc/memory.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/memory.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/memory.cpp.i
.PHONY : __/__/third_party/brotli/enc/memory.cpp.i

__/__/third_party/brotli/enc/memory.s: __/__/third_party/brotli/enc/memory.cpp.s
.PHONY : __/__/third_party/brotli/enc/memory.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/memory.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/memory.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/memory.cpp.s
.PHONY : __/__/third_party/brotli/enc/memory.cpp.s

__/__/third_party/brotli/enc/metablock.o: __/__/third_party/brotli/enc/metablock.cpp.o
.PHONY : __/__/third_party/brotli/enc/metablock.o

# target to build an object file
__/__/third_party/brotli/enc/metablock.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/metablock.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/metablock.cpp.o
.PHONY : __/__/third_party/brotli/enc/metablock.cpp.o

__/__/third_party/brotli/enc/metablock.i: __/__/third_party/brotli/enc/metablock.cpp.i
.PHONY : __/__/third_party/brotli/enc/metablock.i

# target to preprocess a source file
__/__/third_party/brotli/enc/metablock.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/metablock.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/metablock.cpp.i
.PHONY : __/__/third_party/brotli/enc/metablock.cpp.i

__/__/third_party/brotli/enc/metablock.s: __/__/third_party/brotli/enc/metablock.cpp.s
.PHONY : __/__/third_party/brotli/enc/metablock.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/metablock.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/metablock.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/metablock.cpp.s
.PHONY : __/__/third_party/brotli/enc/metablock.cpp.s

__/__/third_party/brotli/enc/static_dict.o: __/__/third_party/brotli/enc/static_dict.cpp.o
.PHONY : __/__/third_party/brotli/enc/static_dict.o

# target to build an object file
__/__/third_party/brotli/enc/static_dict.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/static_dict.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/static_dict.cpp.o
.PHONY : __/__/third_party/brotli/enc/static_dict.cpp.o

__/__/third_party/brotli/enc/static_dict.i: __/__/third_party/brotli/enc/static_dict.cpp.i
.PHONY : __/__/third_party/brotli/enc/static_dict.i

# target to preprocess a source file
__/__/third_party/brotli/enc/static_dict.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/static_dict.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/static_dict.cpp.i
.PHONY : __/__/third_party/brotli/enc/static_dict.cpp.i

__/__/third_party/brotli/enc/static_dict.s: __/__/third_party/brotli/enc/static_dict.cpp.s
.PHONY : __/__/third_party/brotli/enc/static_dict.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/static_dict.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/static_dict.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/static_dict.cpp.s
.PHONY : __/__/third_party/brotli/enc/static_dict.cpp.s

__/__/third_party/brotli/enc/utf8_util.o: __/__/third_party/brotli/enc/utf8_util.cpp.o
.PHONY : __/__/third_party/brotli/enc/utf8_util.o

# target to build an object file
__/__/third_party/brotli/enc/utf8_util.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/utf8_util.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/utf8_util.cpp.o
.PHONY : __/__/third_party/brotli/enc/utf8_util.cpp.o

__/__/third_party/brotli/enc/utf8_util.i: __/__/third_party/brotli/enc/utf8_util.cpp.i
.PHONY : __/__/third_party/brotli/enc/utf8_util.i

# target to preprocess a source file
__/__/third_party/brotli/enc/utf8_util.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/utf8_util.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/utf8_util.cpp.i
.PHONY : __/__/third_party/brotli/enc/utf8_util.cpp.i

__/__/third_party/brotli/enc/utf8_util.s: __/__/third_party/brotli/enc/utf8_util.cpp.s
.PHONY : __/__/third_party/brotli/enc/utf8_util.s

# target to generate assembly for a file
__/__/third_party/brotli/enc/utf8_util.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/brotli/enc/utf8_util.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/brotli/enc/utf8_util.cpp.s
.PHONY : __/__/third_party/brotli/enc/utf8_util.cpp.s

__/__/third_party/lz4/lz4.o: __/__/third_party/lz4/lz4.cpp.o
.PHONY : __/__/third_party/lz4/lz4.o

# target to build an object file
__/__/third_party/lz4/lz4.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/lz4/lz4.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/lz4/lz4.cpp.o
.PHONY : __/__/third_party/lz4/lz4.cpp.o

__/__/third_party/lz4/lz4.i: __/__/third_party/lz4/lz4.cpp.i
.PHONY : __/__/third_party/lz4/lz4.i

# target to preprocess a source file
__/__/third_party/lz4/lz4.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/lz4/lz4.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/lz4/lz4.cpp.i
.PHONY : __/__/third_party/lz4/lz4.cpp.i

__/__/third_party/lz4/lz4.s: __/__/third_party/lz4/lz4.cpp.s
.PHONY : __/__/third_party/lz4/lz4.s

# target to generate assembly for a file
__/__/third_party/lz4/lz4.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/lz4/lz4.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/lz4/lz4.cpp.s
.PHONY : __/__/third_party/lz4/lz4.cpp.s

__/__/third_party/parquet/parquet_types.o: __/__/third_party/parquet/parquet_types.cpp.o
.PHONY : __/__/third_party/parquet/parquet_types.o

# target to build an object file
__/__/third_party/parquet/parquet_types.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/parquet/parquet_types.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/parquet/parquet_types.cpp.o
.PHONY : __/__/third_party/parquet/parquet_types.cpp.o

__/__/third_party/parquet/parquet_types.i: __/__/third_party/parquet/parquet_types.cpp.i
.PHONY : __/__/third_party/parquet/parquet_types.i

# target to preprocess a source file
__/__/third_party/parquet/parquet_types.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/parquet/parquet_types.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/parquet/parquet_types.cpp.i
.PHONY : __/__/third_party/parquet/parquet_types.cpp.i

__/__/third_party/parquet/parquet_types.s: __/__/third_party/parquet/parquet_types.cpp.s
.PHONY : __/__/third_party/parquet/parquet_types.s

# target to generate assembly for a file
__/__/third_party/parquet/parquet_types.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/parquet/parquet_types.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/parquet/parquet_types.cpp.s
.PHONY : __/__/third_party/parquet/parquet_types.cpp.s

__/__/third_party/snappy/snappy-sinksource.o: __/__/third_party/snappy/snappy-sinksource.cc.o
.PHONY : __/__/third_party/snappy/snappy-sinksource.o

# target to build an object file
__/__/third_party/snappy/snappy-sinksource.cc.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/snappy/snappy-sinksource.cc.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/snappy/snappy-sinksource.cc.o
.PHONY : __/__/third_party/snappy/snappy-sinksource.cc.o

__/__/third_party/snappy/snappy-sinksource.i: __/__/third_party/snappy/snappy-sinksource.cc.i
.PHONY : __/__/third_party/snappy/snappy-sinksource.i

# target to preprocess a source file
__/__/third_party/snappy/snappy-sinksource.cc.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/snappy/snappy-sinksource.cc.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/snappy/snappy-sinksource.cc.i
.PHONY : __/__/third_party/snappy/snappy-sinksource.cc.i

__/__/third_party/snappy/snappy-sinksource.s: __/__/third_party/snappy/snappy-sinksource.cc.s
.PHONY : __/__/third_party/snappy/snappy-sinksource.s

# target to generate assembly for a file
__/__/third_party/snappy/snappy-sinksource.cc.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/snappy/snappy-sinksource.cc.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/snappy/snappy-sinksource.cc.s
.PHONY : __/__/third_party/snappy/snappy-sinksource.cc.s

__/__/third_party/snappy/snappy.o: __/__/third_party/snappy/snappy.cc.o
.PHONY : __/__/third_party/snappy/snappy.o

# target to build an object file
__/__/third_party/snappy/snappy.cc.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/snappy/snappy.cc.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/snappy/snappy.cc.o
.PHONY : __/__/third_party/snappy/snappy.cc.o

__/__/third_party/snappy/snappy.i: __/__/third_party/snappy/snappy.cc.i
.PHONY : __/__/third_party/snappy/snappy.i

# target to preprocess a source file
__/__/third_party/snappy/snappy.cc.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/snappy/snappy.cc.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/snappy/snappy.cc.i
.PHONY : __/__/third_party/snappy/snappy.cc.i

__/__/third_party/snappy/snappy.s: __/__/third_party/snappy/snappy.cc.s
.PHONY : __/__/third_party/snappy/snappy.s

# target to generate assembly for a file
__/__/third_party/snappy/snappy.cc.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/snappy/snappy.cc.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/snappy/snappy.cc.s
.PHONY : __/__/third_party/snappy/snappy.cc.s

__/__/third_party/thrift/thrift/protocol/TProtocol.o: __/__/third_party/thrift/thrift/protocol/TProtocol.cpp.o
.PHONY : __/__/third_party/thrift/thrift/protocol/TProtocol.o

# target to build an object file
__/__/third_party/thrift/thrift/protocol/TProtocol.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/thrift/thrift/protocol/TProtocol.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/thrift/thrift/protocol/TProtocol.cpp.o
.PHONY : __/__/third_party/thrift/thrift/protocol/TProtocol.cpp.o

__/__/third_party/thrift/thrift/protocol/TProtocol.i: __/__/third_party/thrift/thrift/protocol/TProtocol.cpp.i
.PHONY : __/__/third_party/thrift/thrift/protocol/TProtocol.i

# target to preprocess a source file
__/__/third_party/thrift/thrift/protocol/TProtocol.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/thrift/thrift/protocol/TProtocol.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/thrift/thrift/protocol/TProtocol.cpp.i
.PHONY : __/__/third_party/thrift/thrift/protocol/TProtocol.cpp.i

__/__/third_party/thrift/thrift/protocol/TProtocol.s: __/__/third_party/thrift/thrift/protocol/TProtocol.cpp.s
.PHONY : __/__/third_party/thrift/thrift/protocol/TProtocol.s

# target to generate assembly for a file
__/__/third_party/thrift/thrift/protocol/TProtocol.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/thrift/thrift/protocol/TProtocol.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/thrift/thrift/protocol/TProtocol.cpp.s
.PHONY : __/__/third_party/thrift/thrift/protocol/TProtocol.cpp.s

__/__/third_party/thrift/thrift/transport/TBufferTransports.o: __/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.o
.PHONY : __/__/third_party/thrift/thrift/transport/TBufferTransports.o

# target to build an object file
__/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.o
.PHONY : __/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.o

__/__/third_party/thrift/thrift/transport/TBufferTransports.i: __/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.i
.PHONY : __/__/third_party/thrift/thrift/transport/TBufferTransports.i

# target to preprocess a source file
__/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.i
.PHONY : __/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.i

__/__/third_party/thrift/thrift/transport/TBufferTransports.s: __/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.s
.PHONY : __/__/third_party/thrift/thrift/transport/TBufferTransports.s

# target to generate assembly for a file
__/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.s
.PHONY : __/__/third_party/thrift/thrift/transport/TBufferTransports.cpp.s

__/__/third_party/thrift/thrift/transport/TTransportException.o: __/__/third_party/thrift/thrift/transport/TTransportException.cpp.o
.PHONY : __/__/third_party/thrift/thrift/transport/TTransportException.o

# target to build an object file
__/__/third_party/thrift/thrift/transport/TTransportException.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/thrift/thrift/transport/TTransportException.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/thrift/thrift/transport/TTransportException.cpp.o
.PHONY : __/__/third_party/thrift/thrift/transport/TTransportException.cpp.o

__/__/third_party/thrift/thrift/transport/TTransportException.i: __/__/third_party/thrift/thrift/transport/TTransportException.cpp.i
.PHONY : __/__/third_party/thrift/thrift/transport/TTransportException.i

# target to preprocess a source file
__/__/third_party/thrift/thrift/transport/TTransportException.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/thrift/thrift/transport/TTransportException.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/thrift/thrift/transport/TTransportException.cpp.i
.PHONY : __/__/third_party/thrift/thrift/transport/TTransportException.cpp.i

__/__/third_party/thrift/thrift/transport/TTransportException.s: __/__/third_party/thrift/thrift/transport/TTransportException.cpp.s
.PHONY : __/__/third_party/thrift/thrift/transport/TTransportException.s

# target to generate assembly for a file
__/__/third_party/thrift/thrift/transport/TTransportException.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/__/__/third_party/thrift/thrift/transport/TTransportException.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/__/__/third_party/thrift/thrift/transport/TTransportException.cpp.s
.PHONY : __/__/third_party/thrift/thrift/transport/TTransportException.cpp.s

column_reader.o: column_reader.cpp.o
.PHONY : column_reader.o

# target to build an object file
column_reader.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/column_reader.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/column_reader.cpp.o
.PHONY : column_reader.cpp.o

column_reader.i: column_reader.cpp.i
.PHONY : column_reader.i

# target to preprocess a source file
column_reader.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/column_reader.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/column_reader.cpp.i
.PHONY : column_reader.cpp.i

column_reader.s: column_reader.cpp.s
.PHONY : column_reader.s

# target to generate assembly for a file
column_reader.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/column_reader.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/column_reader.cpp.s
.PHONY : column_reader.cpp.s

column_writer.o: column_writer.cpp.o
.PHONY : column_writer.o

# target to build an object file
column_writer.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/column_writer.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/column_writer.cpp.o
.PHONY : column_writer.cpp.o

column_writer.i: column_writer.cpp.i
.PHONY : column_writer.i

# target to preprocess a source file
column_writer.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/column_writer.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/column_writer.cpp.i
.PHONY : column_writer.cpp.i

column_writer.s: column_writer.cpp.s
.PHONY : column_writer.s

# target to generate assembly for a file
column_writer.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/column_writer.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/column_writer.cpp.s
.PHONY : column_writer.cpp.s

geo_parquet.o: geo_parquet.cpp.o
.PHONY : geo_parquet.o

# target to build an object file
geo_parquet.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/geo_parquet.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/geo_parquet.cpp.o
.PHONY : geo_parquet.cpp.o

geo_parquet.i: geo_parquet.cpp.i
.PHONY : geo_parquet.i

# target to preprocess a source file
geo_parquet.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/geo_parquet.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/geo_parquet.cpp.i
.PHONY : geo_parquet.cpp.i

geo_parquet.s: geo_parquet.cpp.s
.PHONY : geo_parquet.s

# target to generate assembly for a file
geo_parquet.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/geo_parquet.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/geo_parquet.cpp.s
.PHONY : geo_parquet.cpp.s

parquet_crypto.o: parquet_crypto.cpp.o
.PHONY : parquet_crypto.o

# target to build an object file
parquet_crypto.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_crypto.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_crypto.cpp.o
.PHONY : parquet_crypto.cpp.o

parquet_crypto.i: parquet_crypto.cpp.i
.PHONY : parquet_crypto.i

# target to preprocess a source file
parquet_crypto.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_crypto.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_crypto.cpp.i
.PHONY : parquet_crypto.cpp.i

parquet_crypto.s: parquet_crypto.cpp.s
.PHONY : parquet_crypto.s

# target to generate assembly for a file
parquet_crypto.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_crypto.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_crypto.cpp.s
.PHONY : parquet_crypto.cpp.s

parquet_extension.o: parquet_extension.cpp.o
.PHONY : parquet_extension.o

# target to build an object file
parquet_extension.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_extension.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_extension.cpp.o
.PHONY : parquet_extension.cpp.o

parquet_extension.i: parquet_extension.cpp.i
.PHONY : parquet_extension.i

# target to preprocess a source file
parquet_extension.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_extension.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_extension.cpp.i
.PHONY : parquet_extension.cpp.i

parquet_extension.s: parquet_extension.cpp.s
.PHONY : parquet_extension.s

# target to generate assembly for a file
parquet_extension.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_extension.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_extension.cpp.s
.PHONY : parquet_extension.cpp.s

parquet_file_metadata_cache.o: parquet_file_metadata_cache.cpp.o
.PHONY : parquet_file_metadata_cache.o

# target to build an object file
parquet_file_metadata_cache.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_file_metadata_cache.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_file_metadata_cache.cpp.o
.PHONY : parquet_file_metadata_cache.cpp.o

parquet_file_metadata_cache.i: parquet_file_metadata_cache.cpp.i
.PHONY : parquet_file_metadata_cache.i

# target to preprocess a source file
parquet_file_metadata_cache.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_file_metadata_cache.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_file_metadata_cache.cpp.i
.PHONY : parquet_file_metadata_cache.cpp.i

parquet_file_metadata_cache.s: parquet_file_metadata_cache.cpp.s
.PHONY : parquet_file_metadata_cache.s

# target to generate assembly for a file
parquet_file_metadata_cache.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_file_metadata_cache.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_file_metadata_cache.cpp.s
.PHONY : parquet_file_metadata_cache.cpp.s

parquet_float16.o: parquet_float16.cpp.o
.PHONY : parquet_float16.o

# target to build an object file
parquet_float16.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_float16.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_float16.cpp.o
.PHONY : parquet_float16.cpp.o

parquet_float16.i: parquet_float16.cpp.i
.PHONY : parquet_float16.i

# target to preprocess a source file
parquet_float16.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_float16.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_float16.cpp.i
.PHONY : parquet_float16.cpp.i

parquet_float16.s: parquet_float16.cpp.s
.PHONY : parquet_float16.s

# target to generate assembly for a file
parquet_float16.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_float16.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_float16.cpp.s
.PHONY : parquet_float16.cpp.s

parquet_metadata.o: parquet_metadata.cpp.o
.PHONY : parquet_metadata.o

# target to build an object file
parquet_metadata.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_metadata.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_metadata.cpp.o
.PHONY : parquet_metadata.cpp.o

parquet_metadata.i: parquet_metadata.cpp.i
.PHONY : parquet_metadata.i

# target to preprocess a source file
parquet_metadata.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_metadata.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_metadata.cpp.i
.PHONY : parquet_metadata.cpp.i

parquet_metadata.s: parquet_metadata.cpp.s
.PHONY : parquet_metadata.s

# target to generate assembly for a file
parquet_metadata.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_metadata.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_metadata.cpp.s
.PHONY : parquet_metadata.cpp.s

parquet_multi_file_info.o: parquet_multi_file_info.cpp.o
.PHONY : parquet_multi_file_info.o

# target to build an object file
parquet_multi_file_info.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_multi_file_info.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_multi_file_info.cpp.o
.PHONY : parquet_multi_file_info.cpp.o

parquet_multi_file_info.i: parquet_multi_file_info.cpp.i
.PHONY : parquet_multi_file_info.i

# target to preprocess a source file
parquet_multi_file_info.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_multi_file_info.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_multi_file_info.cpp.i
.PHONY : parquet_multi_file_info.cpp.i

parquet_multi_file_info.s: parquet_multi_file_info.cpp.s
.PHONY : parquet_multi_file_info.s

# target to generate assembly for a file
parquet_multi_file_info.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_multi_file_info.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_multi_file_info.cpp.s
.PHONY : parquet_multi_file_info.cpp.s

parquet_reader.o: parquet_reader.cpp.o
.PHONY : parquet_reader.o

# target to build an object file
parquet_reader.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_reader.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_reader.cpp.o
.PHONY : parquet_reader.cpp.o

parquet_reader.i: parquet_reader.cpp.i
.PHONY : parquet_reader.i

# target to preprocess a source file
parquet_reader.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_reader.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_reader.cpp.i
.PHONY : parquet_reader.cpp.i

parquet_reader.s: parquet_reader.cpp.s
.PHONY : parquet_reader.s

# target to generate assembly for a file
parquet_reader.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_reader.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_reader.cpp.s
.PHONY : parquet_reader.cpp.s

parquet_statistics.o: parquet_statistics.cpp.o
.PHONY : parquet_statistics.o

# target to build an object file
parquet_statistics.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_statistics.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_statistics.cpp.o
.PHONY : parquet_statistics.cpp.o

parquet_statistics.i: parquet_statistics.cpp.i
.PHONY : parquet_statistics.i

# target to preprocess a source file
parquet_statistics.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_statistics.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_statistics.cpp.i
.PHONY : parquet_statistics.cpp.i

parquet_statistics.s: parquet_statistics.cpp.s
.PHONY : parquet_statistics.s

# target to generate assembly for a file
parquet_statistics.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_statistics.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_statistics.cpp.s
.PHONY : parquet_statistics.cpp.s

parquet_timestamp.o: parquet_timestamp.cpp.o
.PHONY : parquet_timestamp.o

# target to build an object file
parquet_timestamp.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_timestamp.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_timestamp.cpp.o
.PHONY : parquet_timestamp.cpp.o

parquet_timestamp.i: parquet_timestamp.cpp.i
.PHONY : parquet_timestamp.i

# target to preprocess a source file
parquet_timestamp.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_timestamp.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_timestamp.cpp.i
.PHONY : parquet_timestamp.cpp.i

parquet_timestamp.s: parquet_timestamp.cpp.s
.PHONY : parquet_timestamp.s

# target to generate assembly for a file
parquet_timestamp.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_timestamp.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_timestamp.cpp.s
.PHONY : parquet_timestamp.cpp.s

parquet_writer.o: parquet_writer.cpp.o
.PHONY : parquet_writer.o

# target to build an object file
parquet_writer.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_writer.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_writer.cpp.o
.PHONY : parquet_writer.cpp.o

parquet_writer.i: parquet_writer.cpp.i
.PHONY : parquet_writer.i

# target to preprocess a source file
parquet_writer.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_writer.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_writer.cpp.i
.PHONY : parquet_writer.cpp.i

parquet_writer.s: parquet_writer.cpp.s
.PHONY : parquet_writer.s

# target to generate assembly for a file
parquet_writer.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/parquet_writer.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/parquet_writer.cpp.s
.PHONY : parquet_writer.cpp.s

serialize_parquet.o: serialize_parquet.cpp.o
.PHONY : serialize_parquet.o

# target to build an object file
serialize_parquet.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/serialize_parquet.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/serialize_parquet.cpp.o
.PHONY : serialize_parquet.cpp.o

serialize_parquet.i: serialize_parquet.cpp.i
.PHONY : serialize_parquet.i

# target to preprocess a source file
serialize_parquet.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/serialize_parquet.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/serialize_parquet.cpp.i
.PHONY : serialize_parquet.cpp.i

serialize_parquet.s: serialize_parquet.cpp.s
.PHONY : serialize_parquet.s

# target to generate assembly for a file
serialize_parquet.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/serialize_parquet.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/serialize_parquet.cpp.s
.PHONY : serialize_parquet.cpp.s

zstd_file_system.o: zstd_file_system.cpp.o
.PHONY : zstd_file_system.o

# target to build an object file
zstd_file_system.cpp.o:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/zstd_file_system.cpp.o
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/zstd_file_system.cpp.o
.PHONY : zstd_file_system.cpp.o

zstd_file_system.i: zstd_file_system.cpp.i
.PHONY : zstd_file_system.i

# target to preprocess a source file
zstd_file_system.cpp.i:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/zstd_file_system.cpp.i
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/zstd_file_system.cpp.i
.PHONY : zstd_file_system.cpp.i

zstd_file_system.s: zstd_file_system.cpp.s
.PHONY : zstd_file_system.s

# target to generate assembly for a file
zstd_file_system.cpp.s:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_extension.dir/build.make extension/parquet/CMakeFiles/parquet_extension.dir/zstd_file_system.cpp.s
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(MAKE) $(MAKESILENT) -f extension/parquet/CMakeFiles/parquet_loadable_extension.dir/build.make extension/parquet/CMakeFiles/parquet_loadable_extension.dir/zstd_file_system.cpp.s
.PHONY : zstd_file_system.cpp.s

# Help Target
help:
	@echo "The following are some of the valid targets for this Makefile:"
	@echo "... all (the default if no target is provided)"
	@echo "... clean"
	@echo "... depend"
	@echo "... edit_cache"
	@echo "... install"
	@echo "... install/local"
	@echo "... install/strip"
	@echo "... list_install_components"
	@echo "... rebuild_cache"
	@echo "... parquet_extension"
	@echo "... parquet_loadable_extension"
	@echo "... __/__/third_party/brotli/common/constants.o"
	@echo "... __/__/third_party/brotli/common/constants.i"
	@echo "... __/__/third_party/brotli/common/constants.s"
	@echo "... __/__/third_party/brotli/common/context.o"
	@echo "... __/__/third_party/brotli/common/context.i"
	@echo "... __/__/third_party/brotli/common/context.s"
	@echo "... __/__/third_party/brotli/common/dictionary.o"
	@echo "... __/__/third_party/brotli/common/dictionary.i"
	@echo "... __/__/third_party/brotli/common/dictionary.s"
	@echo "... __/__/third_party/brotli/common/platform.o"
	@echo "... __/__/third_party/brotli/common/platform.i"
	@echo "... __/__/third_party/brotli/common/platform.s"
	@echo "... __/__/third_party/brotli/common/shared_dictionary.o"
	@echo "... __/__/third_party/brotli/common/shared_dictionary.i"
	@echo "... __/__/third_party/brotli/common/shared_dictionary.s"
	@echo "... __/__/third_party/brotli/common/transform.o"
	@echo "... __/__/third_party/brotli/common/transform.i"
	@echo "... __/__/third_party/brotli/common/transform.s"
	@echo "... __/__/third_party/brotli/dec/bit_reader.o"
	@echo "... __/__/third_party/brotli/dec/bit_reader.i"
	@echo "... __/__/third_party/brotli/dec/bit_reader.s"
	@echo "... __/__/third_party/brotli/dec/decode.o"
	@echo "... __/__/third_party/brotli/dec/decode.i"
	@echo "... __/__/third_party/brotli/dec/decode.s"
	@echo "... __/__/third_party/brotli/dec/huffman.o"
	@echo "... __/__/third_party/brotli/dec/huffman.i"
	@echo "... __/__/third_party/brotli/dec/huffman.s"
	@echo "... __/__/third_party/brotli/dec/state.o"
	@echo "... __/__/third_party/brotli/dec/state.i"
	@echo "... __/__/third_party/brotli/dec/state.s"
	@echo "... __/__/third_party/brotli/enc/backward_references.o"
	@echo "... __/__/third_party/brotli/enc/backward_references.i"
	@echo "... __/__/third_party/brotli/enc/backward_references.s"
	@echo "... __/__/third_party/brotli/enc/backward_references_hq.o"
	@echo "... __/__/third_party/brotli/enc/backward_references_hq.i"
	@echo "... __/__/third_party/brotli/enc/backward_references_hq.s"
	@echo "... __/__/third_party/brotli/enc/bit_cost.o"
	@echo "... __/__/third_party/brotli/enc/bit_cost.i"
	@echo "... __/__/third_party/brotli/enc/bit_cost.s"
	@echo "... __/__/third_party/brotli/enc/block_splitter.o"
	@echo "... __/__/third_party/brotli/enc/block_splitter.i"
	@echo "... __/__/third_party/brotli/enc/block_splitter.s"
	@echo "... __/__/third_party/brotli/enc/brotli_bit_stream.o"
	@echo "... __/__/third_party/brotli/enc/brotli_bit_stream.i"
	@echo "... __/__/third_party/brotli/enc/brotli_bit_stream.s"
	@echo "... __/__/third_party/brotli/enc/cluster.o"
	@echo "... __/__/third_party/brotli/enc/cluster.i"
	@echo "... __/__/third_party/brotli/enc/cluster.s"
	@echo "... __/__/third_party/brotli/enc/command.o"
	@echo "... __/__/third_party/brotli/enc/command.i"
	@echo "... __/__/third_party/brotli/enc/command.s"
	@echo "... __/__/third_party/brotli/enc/compound_dictionary.o"
	@echo "... __/__/third_party/brotli/enc/compound_dictionary.i"
	@echo "... __/__/third_party/brotli/enc/compound_dictionary.s"
	@echo "... __/__/third_party/brotli/enc/compress_fragment.o"
	@echo "... __/__/third_party/brotli/enc/compress_fragment.i"
	@echo "... __/__/third_party/brotli/enc/compress_fragment.s"
	@echo "... __/__/third_party/brotli/enc/compress_fragment_two_pass.o"
	@echo "... __/__/third_party/brotli/enc/compress_fragment_two_pass.i"
	@echo "... __/__/third_party/brotli/enc/compress_fragment_two_pass.s"
	@echo "... __/__/third_party/brotli/enc/dictionary_hash.o"
	@echo "... __/__/third_party/brotli/enc/dictionary_hash.i"
	@echo "... __/__/third_party/brotli/enc/dictionary_hash.s"
	@echo "... __/__/third_party/brotli/enc/encode.o"
	@echo "... __/__/third_party/brotli/enc/encode.i"
	@echo "... __/__/third_party/brotli/enc/encode.s"
	@echo "... __/__/third_party/brotli/enc/encoder_dict.o"
	@echo "... __/__/third_party/brotli/enc/encoder_dict.i"
	@echo "... __/__/third_party/brotli/enc/encoder_dict.s"
	@echo "... __/__/third_party/brotli/enc/entropy_encode.o"
	@echo "... __/__/third_party/brotli/enc/entropy_encode.i"
	@echo "... __/__/third_party/brotli/enc/entropy_encode.s"
	@echo "... __/__/third_party/brotli/enc/fast_log.o"
	@echo "... __/__/third_party/brotli/enc/fast_log.i"
	@echo "... __/__/third_party/brotli/enc/fast_log.s"
	@echo "... __/__/third_party/brotli/enc/histogram.o"
	@echo "... __/__/third_party/brotli/enc/histogram.i"
	@echo "... __/__/third_party/brotli/enc/histogram.s"
	@echo "... __/__/third_party/brotli/enc/literal_cost.o"
	@echo "... __/__/third_party/brotli/enc/literal_cost.i"
	@echo "... __/__/third_party/brotli/enc/literal_cost.s"
	@echo "... __/__/third_party/brotli/enc/memory.o"
	@echo "... __/__/third_party/brotli/enc/memory.i"
	@echo "... __/__/third_party/brotli/enc/memory.s"
	@echo "... __/__/third_party/brotli/enc/metablock.o"
	@echo "... __/__/third_party/brotli/enc/metablock.i"
	@echo "... __/__/third_party/brotli/enc/metablock.s"
	@echo "... __/__/third_party/brotli/enc/static_dict.o"
	@echo "... __/__/third_party/brotli/enc/static_dict.i"
	@echo "... __/__/third_party/brotli/enc/static_dict.s"
	@echo "... __/__/third_party/brotli/enc/utf8_util.o"
	@echo "... __/__/third_party/brotli/enc/utf8_util.i"
	@echo "... __/__/third_party/brotli/enc/utf8_util.s"
	@echo "... __/__/third_party/lz4/lz4.o"
	@echo "... __/__/third_party/lz4/lz4.i"
	@echo "... __/__/third_party/lz4/lz4.s"
	@echo "... __/__/third_party/parquet/parquet_types.o"
	@echo "... __/__/third_party/parquet/parquet_types.i"
	@echo "... __/__/third_party/parquet/parquet_types.s"
	@echo "... __/__/third_party/snappy/snappy-sinksource.o"
	@echo "... __/__/third_party/snappy/snappy-sinksource.i"
	@echo "... __/__/third_party/snappy/snappy-sinksource.s"
	@echo "... __/__/third_party/snappy/snappy.o"
	@echo "... __/__/third_party/snappy/snappy.i"
	@echo "... __/__/third_party/snappy/snappy.s"
	@echo "... __/__/third_party/thrift/thrift/protocol/TProtocol.o"
	@echo "... __/__/third_party/thrift/thrift/protocol/TProtocol.i"
	@echo "... __/__/third_party/thrift/thrift/protocol/TProtocol.s"
	@echo "... __/__/third_party/thrift/thrift/transport/TBufferTransports.o"
	@echo "... __/__/third_party/thrift/thrift/transport/TBufferTransports.i"
	@echo "... __/__/third_party/thrift/thrift/transport/TBufferTransports.s"
	@echo "... __/__/third_party/thrift/thrift/transport/TTransportException.o"
	@echo "... __/__/third_party/thrift/thrift/transport/TTransportException.i"
	@echo "... __/__/third_party/thrift/thrift/transport/TTransportException.s"
	@echo "... column_reader.o"
	@echo "... column_reader.i"
	@echo "... column_reader.s"
	@echo "... column_writer.o"
	@echo "... column_writer.i"
	@echo "... column_writer.s"
	@echo "... geo_parquet.o"
	@echo "... geo_parquet.i"
	@echo "... geo_parquet.s"
	@echo "... parquet_crypto.o"
	@echo "... parquet_crypto.i"
	@echo "... parquet_crypto.s"
	@echo "... parquet_extension.o"
	@echo "... parquet_extension.i"
	@echo "... parquet_extension.s"
	@echo "... parquet_file_metadata_cache.o"
	@echo "... parquet_file_metadata_cache.i"
	@echo "... parquet_file_metadata_cache.s"
	@echo "... parquet_float16.o"
	@echo "... parquet_float16.i"
	@echo "... parquet_float16.s"
	@echo "... parquet_metadata.o"
	@echo "... parquet_metadata.i"
	@echo "... parquet_metadata.s"
	@echo "... parquet_multi_file_info.o"
	@echo "... parquet_multi_file_info.i"
	@echo "... parquet_multi_file_info.s"
	@echo "... parquet_reader.o"
	@echo "... parquet_reader.i"
	@echo "... parquet_reader.s"
	@echo "... parquet_statistics.o"
	@echo "... parquet_statistics.i"
	@echo "... parquet_statistics.s"
	@echo "... parquet_timestamp.o"
	@echo "... parquet_timestamp.i"
	@echo "... parquet_timestamp.s"
	@echo "... parquet_writer.o"
	@echo "... parquet_writer.i"
	@echo "... parquet_writer.s"
	@echo "... serialize_parquet.o"
	@echo "... serialize_parquet.i"
	@echo "... serialize_parquet.s"
	@echo "... zstd_file_system.o"
	@echo "... zstd_file_system.i"
	@echo "... zstd_file_system.s"
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	cd /mnt/aux-data/teague/Projects/duck_hunt/build/release && $(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles/Makefile.cmake 0
.PHONY : cmake_check_build_system

